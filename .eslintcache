[{"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx":"1","/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts":"2","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx":"3","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx":"4","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx":"5","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx":"6","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx":"7","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx":"8","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx":"9","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx":"10","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx":"11","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NavBar/NavBar.tsx":"12","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx":"13","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx":"14","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx":"15","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx":"16"},{"size":854,"mtime":1610318179902,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608243605463,"results":"19","hashOfConfig":"18"},{"size":1108,"mtime":1610490543607,"results":"20","hashOfConfig":"18"},{"size":798,"mtime":1609983807041,"results":"21","hashOfConfig":"18"},{"size":2474,"mtime":1610490543603,"results":"22","hashOfConfig":"18"},{"size":2058,"mtime":1610490543586,"results":"23","hashOfConfig":"18"},{"size":3906,"mtime":1610505102623,"results":"24","hashOfConfig":"18"},{"size":1184,"mtime":1610490543605,"results":"25","hashOfConfig":"18"},{"size":1093,"mtime":1610498229183,"results":"26","hashOfConfig":"18"},{"size":635,"mtime":1610490543588,"results":"27","hashOfConfig":"18"},{"size":534,"mtime":1610490543600,"results":"28","hashOfConfig":"18"},{"size":177,"mtime":1609983807033,"results":"29","hashOfConfig":"18"},{"size":710,"mtime":1610499962133,"results":"30","hashOfConfig":"18"},{"size":3330,"mtime":1610494980557,"results":"31","hashOfConfig":"18"},{"size":2982,"mtime":1610504300106,"results":"32","hashOfConfig":"18"},{"size":1274,"mtime":1610497283179,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"c5br1r",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx",[],["75","76"],"/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx",["77"],"import React, { useEffect, useState } from 'react';\nimport { FormContainer } from \"../FormContainer/FormContainer\";\nimport { Route } from \"react-router-dom\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport CalendarComponent from \"../CalendarComponent/CalendarComponent\";\nimport RequiredForm from \"../RequiredForm/RequiredForm\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport './App.css';\n\n\nexport const App = () => {\n  let [userId, updateUserId] = useState(0);\n  return (\n    <section className='bg'>\n      <Route exact path=\"/\">\n        <HeaderComponent />\n        <RequiredForm updateUserId={updateUserId}/>\n      </Route>\n      <Route\n        path=\"/login\"\n        render={() => {\n          return <LoginPage />;\n        }}\n      ></Route>\n      <Route\n        path=\"/form\"\n        render={() => {\n          return <FormContainer userId={userId}/>;\n        }}\n      ></Route>\n      <Route\n        path=\"/calendar\"\n        render={() => {\n          <HeaderComponent />\n          return <CalendarComponent userId={userId}/>;\n        }}\n      ></Route>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx",["78"],"import React, { useEffect, useState } from 'react';\n const LoginPage = () =>{\n  let [userName,typeName] = useState('')\n\n  let [password,typePass] = useState('')\nlet createUserName = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typeName(event?.target.value)\n}\nlet createPass = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typePass(event?.target.value)\n}\n//are frontend validating this before we send it\n  return (\n    <section>\n    <form>\n\n      <input value = {userName} type = 'text' name = 'userName' placeholder=\"Username\" onChange = {createUserName}\n      ></input>\n      <input value = {password} type = 'password' name = 'password' placeholder=\"Password\" onChange = {createPass}\n      ></input>\n    </form>\n    <button>Submit</button>\n    </section>\n  )\n}\nexport default LoginPage","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx",["79"],"import React, { useState } from \"react\";\nimport TextQuestion from \"../TextQuestion/TextQuestion\";\nimport FormStartPage from \"../FormStartPage/FormStartPage\";\nimport { gql, useMutation,ApolloError } from \"@apollo/client\";\nimport './RequiredForm.css';\n\ntype updateUserId = (index: number) => void;\ntype RequiredFormProps = {\n  updateUserId: updateUserId;\n};\n\nlet RequiredForm = (props: RequiredFormProps) => {\n  let create_user = gql`\n    mutation createUser($name: String!, $email: String!, $birthdate: String!) {\n      createUser(input: { name: $name, email: $email, birthdate: $birthdate }) {\n        id\n        name\n      }\n    }\n  `;\n\n  let [createUser, { data, loading, error, called }] = useMutation(create_user);\n\n  let sendUser = async () => {\n    let Bday = answers[1];\n\n    let finalBday = Bday.split(\"-\").reverse().join(\"-\");\n    if (!loading && !called) {\n      createUser({\n        variables: {\n          name: answers[0],\n          birthdate: finalBday,\n          email: answers[2],\n        }\n      }).catch(e => {\n        return e\n      });\n    } else if (loading) {\n      return <p>Loading</p>;\n    }\n  };\n\n  let questions = [\n    \"What is your name\",\n    \"What is your birthday\",\n    \"What is your email address\",\n  ];\n  let [answers, addAnswer] = useState<string[]>([]);\n  let [currentQuestionIndex, updateIndex] = useState(0);\n  if (answers.length === questions.length) {\n    sendUser()\n    if(loading){\n      return <p>Loading questions</p>\n    }\n    if(error){\n      return <section>\n      {error.graphQLErrors.map(({ message }, i) => (\n      <span key={i}>{message}</span>\n    ))}\n    </section>\n    }\n  }\n  if (data) {\n     return (\n      <FormStartPage\n        updateUserId = {props.updateUserId}\n        userId={data.createUser.id}\n        userName={data.createUser.name}\n      />\n    );\n  }\n  return (\n    <form>\n    <p className='landing-page-instructions'>Welcome to Eras, the life calendar.  Eras allows you to holistically visualize your life in order to live more intentionally. We're going to ask you a few questions in order to get to know you, and generate your life calendar!  Let's start!</p>\n      <div className='required-form'>\n        <TextQuestion\n          currentQuestion={questions[currentQuestionIndex]}\n          changeQuestion={updateIndex}\n          addAnswer={addAnswer}\n          answers={answers}\n          currentQuestionIndex={currentQuestionIndex}\n        />\n      </div>\n    </form>\n  );\n};\nexport default RequiredForm;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx",["80","81","82","83"],"import React, { ReactElement, useEffect, useState } from 'react';\nimport { Question } from '../Question/Question';\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport { gql, useQuery } from '@apollo/client';\nimport { queryHelpers } from '@testing-library/react';\nimport CalendarComponent from '../CalendarComponent/CalendarComponent';\nimport './FormContainer.css';\n\n\ntype FormContaineProps = {\n  userId: number;\n};\n\ninterface Question {\n  question: string;\n  name: string;\n  id: number;\n  __typename: string;\n}\n\nexport const getQuestionsQuery = gql`\n  {\n    getOnboardingQuestions {\n      id\n      question\n      name\n      eventType\n    }\n  }\n`;\n\nexport const FormContainer = (props: FormContaineProps) => {\n  let id = props.userId\n  if(props.userId ===0 && sessionStorage.length !==0){\n  //@ts-ignore\n  id =JSON.parse(sessionStorage.getItem('userId'))\n}\n  const [answers, setAnswer] = useState<string[]>([]);\n  const [currentQuestionIndex, changeQuestion] = useState(0);\n\n  const { loading, error, data } = useQuery(getQuestionsQuery);\n  if (error) {\n    return <h1>Error loading questions...</h1>;\n  }\n  if (loading || !data) {\n    return <h1>Loading...</h1>;\n  }\n\n  let questions = data.getOnboardingQuestions;\n\n  if(answers.length === questions.length) {\n    return <CalendarComponent userId = {id}/>\n    }\n\n  return (\n    <section>\n      <HeaderComponent />\n      <div className='form-container'>\n      <form>\n        <Question\n          questionType={questions[currentQuestionIndex].eventType}\n          currentQuestion={questions[currentQuestionIndex].question}\n          changeQuestion={changeQuestion}\n          currentQuestionIndex={currentQuestionIndex}\n          setAnswer={setAnswer}\n          answers={answers}\n          userId={id}\n        />\n      </form>\n      </div>\n      <div>\n      {questions.length && (\n        <ProgressBar\n          questionsLength={questions.length}\n          answersLength={answers.length}\n        />)}\n      </div>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx",["84","85","86","87","88","89","90"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx",["91"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './FormStartPage.css';\n\ntype updateUserId = (id:number) => void\ntype FormStartPageProps = {\n  userId: number;\n  userName: string;\n  updateUserId :updateUserId\n};\nlet FormStartPage = (props: FormStartPageProps) => {\n  useEffect(() => {\n    sessionStorage.setItem(\"userId\",JSON.stringify(props.userId))\n    props.updateUserId(props.userId)\n  }, [props.userId])\n  return (\n    <section>\n      <p className='life-choice-statement'>\n        As you know life is filled with choices. We've decided to give you\n        another. You can either start off editend your calendar from a blank\n        calendar or you can start off editing on a calendar with some events. If\n        you choose the prefilled calender\n      </p>\n      <Link to=\"/calendar\" style={{ textDecoration: 'none'}}>\n        <button>Start Calendar</button>\n      </Link>\n      <Link to=\"/form\" style={{ textDecoration: 'none'}}>\n        <button>Start Form</button>\n      </Link>\n    </section>\n  );\n};\nexport default React.memo(FormStartPage);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx",["92","93","94"],"import React, { useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './HeaderComponent.css';\n\n\nconst HeaderComponent = () =>{\n  return (\n      <header className='header'>\n        {/* <img src = ''> logo*/}\n\n        <div>\n        <h1 className='logo-area'>ERAS</h1>\n        </div>\n        <div className='active-buttons'>\n          {/*<NavLink className='login-button header-link header-text' to=\"/login\">Login</NavLink> */}\n          {/* <NavLink className='calender-button header-link header-text' to=\"/calender\">Calendar</NavLink> */}\n        </div>\n      </header>\n  )\n}\nexport default HeaderComponent\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NavBar/NavBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx",["95","96"],"import React, { useEffect, useState } from 'react';\nimport './Week.css';\n\ntype WeekProps = {\n  key: number;\n  index: number;\n  color: string | null;\n  name: string | null;\n};\n\nconst Week = (props: WeekProps) => {\n  let color:string | null;\n  if(props.color === null){\n    color = ''\n  }\n  if(props.color === 'none'){\n    color = 'red'\n  }\n  else{\n    color = props.color\n  }\n  let handleClick = () => {\n    console.log(props.name)\n  };\n    // @ts-ignore\n  return <section style = {{backgroundColor:color}} className='week' onClick={handleClick}></section>;\n};\nfunction areEqual(prevProps:WeekProps, nextProps: WeekProps) {\n  return prevProps.name === nextProps.name\n}\nexport default React.memo(Week,areEqual);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx",["97"],"import React, { useState } from \"react\";\nimport { DocumentNode, gql, useMutation } from \"@apollo/client\";\n\ntype ChangeQuestion = (index: number) => void;\n\ntype SetAnswer = (answer: string[]) => void;\n\ntype QuestionProps = {\n  questionType: string;\n  changeQuestion: ChangeQuestion;\n  currentQuestionIndex: number;\n  currentQuestion: string;\n  setAnswer: SetAnswer;\n  answers: string[];\n  userId: number;\n};\n\nexport const figureMutation = (questionType: string):DocumentNode => { \n  let mutation:DocumentNode;\n    if (questionType === \"event\") {\n      mutation = gql`\n        mutation createEvent($userId: ID!, $name: String!, $date: String!) {\n          createEvent(input: { userId: $userId, name: $name, date: $date }){\n            userId\n          }\n        }\n      `;\n    }\n    if (questionType === \"era\") {\n      mutation = gql`\n        mutation createEra($userId :ID!, $name:String!, $startDate:String!, $endDate:String!, $color:String!){\n        createEra(input :{\n          userId: $userId,\n          name: $name,\n          startDate:$startDate,\n          endDate:$endDate,\n          color:$color,\n        }){\n          userId\n          }\n      }`\n;\n  }\n  // @ts-ignore \n  return mutation\n}\n\nexport const Question = (props: QuestionProps) => {\n  const [date, updateDate] = useState(\"\");\n  const [endDate, updateEndDate] = useState(\"\");\n  const [answer, saveAnswer] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateDate(event.target.value);\n    saveAnswer(event.target.value);\n  };\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) =>{\n    updateEndDate(event.target.value)\n  }\n\n  const [makeMutation, { data }] = useMutation(figureMutation(props.questionType));\n\n  return (\n    <>\n      <h1>{props.currentQuestion}</h1>\n      <input\n        data-testid=\"date\"\n        type=\"date\"\n        onChange={handleChange}\n        value={date}\n      ></input>\n      {props.questionType === \"era\" && (\n        <input\n          data-testid=\"date\"\n          type=\"date\"\n          onChange={handleEndDateChange}\n          value={endDate}\n        ></input>\n      )}\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.changeQuestion(props.currentQuestionIndex + 1);\n          props.setAnswer([...props.answers, \"\"]);\n          updateDate(\"\");\n        }}\n      >\n        Skip\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          if (props.questionType === \"event\") {\n            makeMutation({\n              variables: {\n                userId: props.userId,\n                name: props.currentQuestion,\n                date: date.split(\"-\").reverse().join(\"-\"),\n              },\n            });\n          }\n          if (props.questionType === \"era\") {\n            makeMutation({\n              variables: {\n                userId: props.userId,\n                name: props.currentQuestion,\n                startDate: date.split(\"-\").reverse().join(\"-\"),\n                endDate: endDate.split(\"-\").reverse().join(\"-\"),\n              },\n            });\n            updateEndDate(\"\");\n          }\n          props.changeQuestion(props.currentQuestionIndex + 1);\n          props.setAnswer([...props.answers, answer]);\n          updateDate(\"\");\n        }}\n      >\n        Next\n      </button>\n    </>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx",["98","99","100","101","102","103"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":4,"column":27,"nodeType":"110","messageId":"111","endLine":4,"endColumn":38},{"ruleId":"108","severity":1,"message":"113","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":1,"column":31,"nodeType":"110","messageId":"111","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"114","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":15,"column":11,"nodeType":"110","messageId":"117","endLine":15,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"118","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"119","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":57,"column":24,"nodeType":"122","messageId":"123","endLine":57,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":57,"column":48,"nodeType":"122","messageId":"123","endLine":57,"endColumn":50},{"ruleId":"124","severity":1,"message":"125","line":91,"column":51,"nodeType":"126","messageId":"127","endLine":91,"endColumn":53},{"ruleId":"124","severity":1,"message":"125","line":99,"column":58,"nodeType":"126","messageId":"127","endLine":99,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":15,"column":6,"nodeType":"130","endLine":15,"endColumn":20,"suggestions":"131"},{"ruleId":"108","severity":1,"message":"132","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"108","severity":1,"message":"133","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"134","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"132","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"135","line":61,"column":26,"nodeType":"110","messageId":"111","endLine":61,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"136","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":22},{"ruleId":"108","severity":1,"message":"137","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":22,"column":24,"nodeType":"122","messageId":"123","endLine":22,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":22,"column":48,"nodeType":"122","messageId":"123","endLine":22,"endColumn":50},{"ruleId":"108","severity":1,"message":"135","line":42,"column":26,"nodeType":"110","messageId":"111","endLine":42,"endColumn":30},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ApolloError' is defined but never used.","'ReactElement' is defined but never used.","'queryHelpers' is defined but never used.","@typescript-eslint/no-redeclare","'Question' is already defined.","redeclared","'NavBar' is defined but never used.","'AdditionalQuestions' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["140"],"'useState' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'data' is assigned a value but never used.","'DocumentNode' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [props, props.userId]",{"range":"143","text":"144"},[433,447],"[props, props.userId]"]