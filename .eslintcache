[{"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx":"1","/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts":"2","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx":"3","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx":"4","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx":"5","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx":"6","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx":"7","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx":"8","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx":"9","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx":"10","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx":"11","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx":"12","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx":"13","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx":"14","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx":"15"},{"size":854,"mtime":1610318179902,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1608243605463,"results":"18","hashOfConfig":"17"},{"size":1108,"mtime":1610490543607,"results":"19","hashOfConfig":"17"},{"size":2058,"mtime":1610490543586,"results":"20","hashOfConfig":"17"},{"size":834,"mtime":1610565514943,"results":"21","hashOfConfig":"17"},{"size":2601,"mtime":1610566545382,"results":"22","hashOfConfig":"17"},{"size":746,"mtime":1610565514941,"results":"23","hashOfConfig":"17"},{"size":3846,"mtime":1610566650619,"results":"24","hashOfConfig":"17"},{"size":534,"mtime":1610490543600,"results":"25","hashOfConfig":"17"},{"size":1207,"mtime":1610565514944,"results":"26","hashOfConfig":"17"},{"size":1172,"mtime":1610567137740,"results":"27","hashOfConfig":"17"},{"size":3665,"mtime":1610567585144,"results":"28","hashOfConfig":"17"},{"size":3086,"mtime":1610565777364,"results":"29","hashOfConfig":"17"},{"size":686,"mtime":1610565528261,"results":"30","hashOfConfig":"17"},{"size":1339,"mtime":1610565528263,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"c5br1r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx",[],["70","71"],"/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx",["72"],"import React, { useEffect, useState } from 'react';\nimport { FormContainer } from \"../FormContainer/FormContainer\";\nimport { Route } from \"react-router-dom\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport CalendarComponent from \"../CalendarComponent/CalendarComponent\";\nimport RequiredForm from \"../RequiredForm/RequiredForm\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport './App.css';\n\n\nexport const App = () => {\n  let [userId, updateUserId] = useState(0);\n  return (\n    <section className='bg'>\n      <Route exact path=\"/\">\n        <HeaderComponent />\n        <RequiredForm updateUserId={updateUserId}/>\n      </Route>\n      <Route\n        path=\"/login\"\n        render={() => {\n          return <LoginPage />;\n        }}\n      ></Route>\n      <Route\n        path=\"/form\"\n        render={() => {\n          return <FormContainer userId={userId}/>;\n        }}\n      ></Route>\n      <Route\n        path=\"/calendar\"\n        render={() => {\n          <HeaderComponent />\n          return <CalendarComponent userId={userId}/>;\n        }}\n      ></Route>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx",["73","74","75","76"],"import React, { ReactElement, useEffect, useState } from 'react';\nimport { Question } from '../Question/Question';\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport { gql, useQuery } from '@apollo/client';\nimport { queryHelpers } from '@testing-library/react';\nimport CalendarComponent from '../CalendarComponent/CalendarComponent';\nimport './FormContainer.css';\n\n\ntype FormContaineProps = {\n  userId: number;\n};\n\ninterface Question {\n  question: string;\n  name: string;\n  id: number;\n  __typename: string;\n}\n\nexport const getQuestionsQuery = gql`\n  {\n    getOnboardingQuestions {\n      id\n      question\n      name\n      eventType\n    }\n  }\n`;\n\nexport const FormContainer = (props: FormContaineProps) => {\n  let id = props.userId\n  if(props.userId ===0 && sessionStorage.length !==0){\n  //@ts-ignore\n  id =JSON.parse(sessionStorage.getItem('userId'))\n}\n  const [answers, setAnswer] = useState<string[]>([]);\n  const [currentQuestionIndex, changeQuestion] = useState(0);\n\n  const { loading, error, data } = useQuery(getQuestionsQuery);\n  if (error) {\n    return <h1>Error loading questions...</h1>;\n  }\n  if (loading || !data) {\n    return <h1>Loading...</h1>;\n  }\n\n  let questions = data.getOnboardingQuestions;\n\n  if(answers.length === questions.length) {\n    return <CalendarComponent userId = {id}/>\n    }\n\n  return (\n    <section>\n      <HeaderComponent />\n      <div className='form-container'>\n      <form>\n        <Question\n          questionType={questions[currentQuestionIndex].eventType}\n          currentQuestion={questions[currentQuestionIndex].question}\n          changeQuestion={changeQuestion}\n          currentQuestionIndex={currentQuestionIndex}\n          setAnswer={setAnswer}\n          answers={answers}\n          userId={id}\n        />\n      </form>\n      </div>\n      <div>\n      {questions.length && (\n        <ProgressBar\n          questionsLength={questions.length}\n          answersLength={answers.length}\n        />)}\n      </div>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx",["77"],"import React, { useEffect, useState } from 'react';\n const LoginPage = () =>{\n  let [userName,typeName] = useState('')\n\n  let [password,typePass] = useState('')\nlet createUserName = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typeName(event?.target.value)\n}\nlet createPass = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typePass(event?.target.value)\n}\n//are frontend validating this before we send it\n  return (\n    <section>\n    <form>\n      <label>\n        <input value = {userName} type = 'text' name = 'userName' placeholder=\"Username\" onChange = {createUserName} />\n      </label>\n      <label>\n        <input value = {password} type = 'password' name = 'password' placeholder=\"Password\" onChange = {createPass} />\n      </label>\n    </form>\n    <button>Submit</button>\n    </section>\n  )\n}\nexport default LoginPage\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx",["78"],"import React, { useState } from \"react\";\nimport TextQuestion from \"../TextQuestion/TextQuestion\";\nimport FormStartPage from \"../FormStartPage/FormStartPage\";\nimport { gql, useMutation,ApolloError } from \"@apollo/client\";\nimport './RequiredForm.css';\n\ntype updateUserId = (index: number) => void;\ntype RequiredFormProps = {\n  updateUserId: updateUserId;\n};\n\nlet RequiredForm = (props: RequiredFormProps) => {\n\n  \n  let create_user = gql`\n    mutation createUser($name: String!, $email: String!, $birthdate: String!) {\n      createUser(input: { name: $name, email: $email, birthdate: $birthdate }) {\n        id\n        name\n      }\n    }\n  `;\n\n  let [createUser, { data, loading, error, called }] = useMutation(create_user);\n  \n  if(data === undefined && sessionStorage.getItem('userId') !== undefined ){\n    sessionStorage.removeItem('userId')\n  }\n  let sendUser = async () => {\n    let Bday = answers[1];\n\n    let finalBday = Bday.split(\"-\").reverse().join(\"-\");\n    if (!loading && !called) {\n      createUser({\n        variables: {\n          name: answers[0],\n          birthdate: finalBday,\n          email: answers[2],\n        }\n      }).catch(e => {\n        return e\n      });\n    } else if (loading) {\n      return <p>Loading</p>;\n    }\n  };\n\n  let questions = [\n    \"What is your name\",\n    \"What is your birthday\",\n    \"What is your email address\",\n  ];\n  let [answers, addAnswer] = useState<string[]>([]);\n  let [currentQuestionIndex, updateIndex] = useState(0);\n  if (answers.length === questions.length) {\n    sendUser()\n    if(loading){\n      return <p>Loading questions</p>\n    }\n    if(error){\n      return <section>\n      {error.graphQLErrors.map(({ message }, i) => (\n      <span key={i}>{message}</span>\n    ))}\n    </section>\n    }\n  }\n  if (data) {\n     return (\n      <FormStartPage\n        updateUserId = {props.updateUserId}\n        userId={data.createUser.id}\n        userName={data.createUser.name}\n      />\n    );\n  }\n  return (\n    <form>\n    <p className='landing-page-instructions'>Welcome to Eras, the life calendar.  Eras allows you to holistically visualize your life in order to live more intentionally. We're going to ask you a few questions in order to get to know you, and generate your life calendar!  Let's start!</p>\n      <div className='required-form'>\n        <TextQuestion\n          currentQuestion={questions[currentQuestionIndex]}\n          changeQuestion={updateIndex}\n          addAnswer={addAnswer}\n          answers={answers}\n          currentQuestionIndex={currentQuestionIndex}\n        />\n      </div>\n    </form>\n  );\n};\nexport default RequiredForm;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx",["79","80","81","82"],"import React, { useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './HeaderComponent.css';\nimport Logo from '../../../public/eras-logo-horizontal.png'\n\n\nconst HeaderComponent = () =>{\n  return (\n      <header className='header'>\n        <img src='eras-logo-horizontal.png' className='logo' alt='eras logo'/>\n        <div>\n        {/*<h1 className='logo-area'>ERAS</h1> */}\n        </div>\n        <div className='active-buttons'>\n          {/* <NavLink className='login-button header-link header-text' to=\"/login\">Login</NavLink> */}\n          {/* <NavLink className='calender-button header-link header-text' to=\"/calender\">Calendar</NavLink> */}\n        </div>\n      </header>\n  )\n}\nexport default HeaderComponent\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx",["83","84","85","86","87","88","89"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx",["90"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx",["91"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx",["92","93","94","95","96","97"],"import React, { useState, useEffect} from 'react'\nimport EventForm from '../EventForm/EventForm'\nimport { DocumentNode, gql, useMutation } from \"@apollo/client\";\nimport { render } from 'react-dom';\ntype addEra = (era:any) => void\n\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\ntype eventProps = {\n  userId: number\n  newEras: era[],\n  addEra: addEra\n}\nconst Event = (props: eventProps) => {\n  let id = props.userId\n  if(props.userId ===0 || props.userId ===null && sessionStorage.getItem('userId') !== undefined ){\n    //@ts-ignore\n    id =JSON.parse(sessionStorage.getItem('userId'))\n  }\n    let CREATE_ERA = gql`\n    mutation createEra($userId :ID!, $name:String!, $startDate:String!, $endDate:String!, $color:String!){\n    createEra(input :{\n      userId: $userId,\n      name: $name,\n      startDate:$startDate,\n      endDate:$endDate,\n      color:$color,\n    }){\n      userId\n      name\n      startWeek\n      endWeek\n      color\n      }\n  }`\n  const [makeMutation, { data,loading,error }] = useMutation(CREATE_ERA);\n\n  const [lifeEvent, setLifeEvent] = useState('')\n  const [startEvent, setStartEvent] = useState('')\n  const [endEvent, setEndEvent] = useState('')\n  const [display, changeDisplay] = useState(false)\n\n  const handleLifeEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent(event.target.value)\n  }\n\n  const handleStartEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setStartEvent(event.target.value)\n  }\n\n  const handleEndEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setEndEvent(event.target.value)\n  }\n\n  const handleClearEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent('')\n  }\n\n  const handleButtonClick = () => {\n    changeDisplay(true)\n  }\n  const handleSubmit=async () =>{\n    if(lifeEvent === '' || startEvent ===''|| endEvent ==='' ){\n      return\n    }\n    // let color = Math.floor(Math.random()*16777215).toString(16);\n    //  color = \"#\"+ color\n    let response = await makeMutation({\n      variables: {\n        userId: id,\n        name: lifeEvent,\n        startDate: startEvent.split(\"-\").reverse().join(\"-\"),\n        endDate: endEvent.split(\"-\").reverse().join(\"-\"),\n        // color:color\n      },\n    }).catch(error =>{\n      return error\n    });\n    if(response){\n      props.addEra([...props.newEras,response.data.createEra])\n      setLifeEvent('')\n      setEndEvent('')\n      setStartEvent('')\n      changeDisplay(false)\n    }\n\n  }\n  if(loading){\n    return <p>We are trying your event</p>\n  }\n  if(error){\n    return <p>Something went wrong</p>\n  }\n   \n\n  return (\n    <section>\n    <button onClick={handleButtonClick}>Add an Era</button>\n      {display && <EventForm\n        handleLifeEvent={handleLifeEvent}\n        handleStartEvent={handleStartEvent}\n        handleEndEvent={handleEndEvent}\n        handleClearEvent={handleClearEvent}\n        changeDisplay={changeDisplay}\n        handleSubmit = {handleSubmit}\n        />\n      }\n    </section>\n  )\n}\n\n\n\nexport default React.memo(Event);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx",["98","99"],"import React, { useEffect, useState } from 'react';\nimport './Week.css';\n\ntype WeekProps = {\n  key: number;\n  index: number;\n  color: string | null;\n  name: string | null;\n};\n\nconst Week = (props: WeekProps) => {\n  let color:string | null;\n  if(props.color === null){\n    color = ''\n  }\n  if(props.color === 'none'){\n    color = '#a94460'\n  }\n  else{\n    color = props.color\n  }\n  let handleClick = () => {\n  };\n    // @ts-ignore\n  return <section style = {{backgroundColor:color}} className='week' onClick={handleClick}></section>;\n};\nfunction areEqual(prevProps:WeekProps, nextProps: WeekProps) {\n  return prevProps.name === nextProps.name\n}\nexport default React.memo(Week,areEqual);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":1,"column":31,"nodeType":"106","messageId":"107","endLine":1,"endColumn":40},{"ruleId":"104","severity":1,"message":"109","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":15,"column":11,"nodeType":"106","messageId":"112","endLine":15,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"113","line":4,"column":27,"nodeType":"106","messageId":"107","endLine":4,"endColumn":38},{"ruleId":"104","severity":1,"message":"114","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"116","line":2,"column":16,"nodeType":"106","messageId":"107","endLine":2,"endColumn":23},{"ruleId":"104","severity":1,"message":"117","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"118","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"119","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":56,"column":24,"nodeType":"122","messageId":"123","endLine":56,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":56,"column":48,"nodeType":"122","messageId":"123","endLine":56,"endColumn":50},{"ruleId":"124","severity":1,"message":"125","line":88,"column":51,"nodeType":"126","messageId":"127","endLine":88,"endColumn":53},{"ruleId":"124","severity":1,"message":"125","line":95,"column":58,"nodeType":"126","messageId":"127","endLine":95,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":15,"column":6,"nodeType":"130","endLine":15,"endColumn":20,"suggestions":"131"},{"ruleId":"104","severity":1,"message":"132","line":61,"column":26,"nodeType":"106","messageId":"107","endLine":61,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"133","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"104","severity":1,"message":"134","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":22,"column":24,"nodeType":"122","messageId":"123","endLine":22,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":22,"column":48,"nodeType":"122","messageId":"123","endLine":22,"endColumn":50},{"ruleId":"104","severity":1,"message":"132","line":42,"column":26,"nodeType":"106","messageId":"107","endLine":42,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'queryHelpers' is defined but never used.","@typescript-eslint/no-redeclare","'Question' is already defined.","redeclared","'ApolloError' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'Logo' is defined but never used.","'NavBar' is defined but never used.","'AdditionalQuestions' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["137"],"'data' is assigned a value but never used.","'DocumentNode' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [props, props.userId]",{"range":"140","text":"141"},[433,447],"[props, props.userId]"]