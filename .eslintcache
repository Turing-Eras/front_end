[{"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx":"1","/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts":"2","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx":"3","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx":"4","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx":"5","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx":"6","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx":"7","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx":"8","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx":"9","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx":"10","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx":"11","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx":"12","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx":"13","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NavBar/NavBar.tsx":"14"},{"size":854,"mtime":1610318179902,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1608243605463,"results":"17","hashOfConfig":"16"},{"size":988,"mtime":1610318179898,"results":"18","hashOfConfig":"16"},{"size":1874,"mtime":1610384497318,"results":"19","hashOfConfig":"16"},{"size":798,"mtime":1609983807041,"results":"20","hashOfConfig":"16"},{"size":2178,"mtime":1610411081241,"results":"21","hashOfConfig":"16"},{"size":2789,"mtime":1610408195001,"results":"22","hashOfConfig":"16"},{"size":427,"mtime":1610224537285,"results":"23","hashOfConfig":"16"},{"size":442,"mtime":1610224537284,"results":"24","hashOfConfig":"16"},{"size":3470,"mtime":1610411900435,"results":"25","hashOfConfig":"16"},{"size":1150,"mtime":1610318179901,"results":"26","hashOfConfig":"16"},{"size":894,"mtime":1610325047552,"results":"27","hashOfConfig":"16"},{"size":627,"mtime":1610387986971,"results":"28","hashOfConfig":"16"},{"size":177,"mtime":1609983807033,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"c5br1r",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx",[],["66","67"],"/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx",["68","69","70","71"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport { Question } from \"../Question/Question\";\nimport HeaderComponent from \"../HeaderComponent/HeaderComponent\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { queryHelpers } from \"@testing-library/react\";\nimport CalendarComponent from \"../CalendarComponent/CalendarComponent\";\n\ntype FormContaineProps = {\n  userId: number;\n};\n\ninterface Question {\n  question: string;\n  name: string;\n  id: number;\n  __typename: string;\n}\n\nexport const getQuestionsQuery = gql`\n  {\n    getOnboardingQuestions {\n      id\n      question\n      name\n      eventType\n    }\n  }\n`;\n\nexport const FormContainer = (props: FormContaineProps) => {\n  const [answers, setAnswer] = useState<string[]>([]);\n  const [currentQuestionIndex, changeQuestion] = useState(0);\n\n  const { loading, error, data } = useQuery(getQuestionsQuery);\n  if (error) {\n    return <h1>Error loading questions...</h1>;\n  }\n  if (loading || !data) {\n    console.log('loading')\n    return <h1>Loading...</h1>;\n  }\n\n  let questions = data.getOnboardingQuestions;\n\n  if(answers.length === questions.length) {\n    return <CalendarComponent userId = {props.userId}/>\n    }\n\n  return (\n    <>\n      {questions.length && (\n        <ProgressBar\n          questionsLength={questions.length}\n          answersLength={answers.length}\n        />\n      )}\n      {answers.length === 0 && <HeaderComponent />}\n      <form>\n        <Question\n          questionType={questions[currentQuestionIndex].eventType}\n          currentQuestion={questions[currentQuestionIndex].question}\n          changeQuestion={changeQuestion}\n          currentQuestionIndex={currentQuestionIndex}\n          setAnswer={setAnswer}\n          answers={answers}\n          userId={props.userId}\n        />\n      </form>\n    \n    </>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx",["72"],"import React, { useEffect, useState } from 'react';\n const LoginPage = () =>{\n  let [userName,typeName] = useState('')\n\n  let [password,typePass] = useState('')\nlet createUserName = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typeName(event?.target.value)\n}\nlet createPass = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typePass(event?.target.value)\n}\n//are frontend validating this before we send it\n  return (\n    <section>\n    <form>\n\n      <input value = {userName} type = 'text' name = 'userName' placeholder=\"Username\" onChange = {createUserName}\n      ></input>\n      <input value = {password} type = 'password' name = 'password' placeholder=\"Password\" onChange = {createPass}\n      ></input>\n    </form>\n    <button>Submit</button>\n    </section>\n  )\n}\nexport default LoginPage","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx",["73"],"import React, { useState } from \"react\";\nimport TextQuestion from \"../TextQuestion/TextQuestion\";\nimport FormStartPage from \"../FormStartPage/FormStartPage\";\nimport { gql, useMutation,ApolloError } from \"@apollo/client\";\ntype updateUserId = (index: number) => void;\ntype RequiredFormProps = {\n  updateUserId: updateUserId;\n};\n\nlet RequiredForm = (props: RequiredFormProps) => {\n  let create_user = gql`\n    mutation createUser($name: String!, $email: String!, $birthdate: String!) {\n      createUser(input: { name: $name, email: $email, birthdate: $birthdate }) {\n        id\n        name\n      }\n    }\n  `;\n  let onError = (error: ApolloError) =>{\n\n  }\n  let [createUser, { data, loading, error, called }] = useMutation(create_user);\n\n  let sendUser = async () => {\n    let Bday = answers[1];\n\n    let finalBday = Bday.split(\"-\").reverse().join(\"-\");\n    if (!loading && !called) {\n      createUser({\n        variables: {\n          name: answers[0],\n          birthdate: finalBday,\n          email: answers[2],\n        }\n      }).catch(e => {\n        return e\n      });\n    } else if (loading) {\n      return <p>Loading</p>;\n    }\n\n  };\n\n  let questions = [\n    \"What is your name\",\n    \"What is your birthday\",\n    \"What is your email address\",\n  ];\n  let [answers, addAnswer] = useState<string[]>([]);\n  let [currentQuestionIndex, updateIndex] = useState(0);\n  if (answers.length === questions.length) {\n    sendUser()\n    if(loading){\n      return <p>Loading questions</p>\n    }\n    if(error){\n      return <section>\n      {error.graphQLErrors.map(({ message }, i) => (\n      <span key={i}>{message}</span>\n    ))}\n    </section>\n    }\n  }\n  if (data) {\n     return (\n      <FormStartPage\n      updateUserId = {props.updateUserId}\n        userId={data.createUser.id}\n        userName={data.createUser.name}\n      />\n    );\n  }\n  return (\n    <form>\n      User message instructions will go here\n      <TextQuestion\n        currentQuestion={questions[currentQuestionIndex]}\n        changeQuestion={updateIndex}\n        addAnswer={addAnswer}\n        answers={answers}\n        currentQuestionIndex={currentQuestionIndex}\n      />\n    </form>\n  );\n};\nexport default RequiredForm;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx",["74","75","76"],"import React, { useEffect, useState } from \"react\";\nimport Week from \"../Week/Week\";\nimport NavBar from \"../NavBar/NavBar\";\nimport { gql, useQuery } from \"@apollo/client\";\n\ntype CalenderComponentProps = {\n  userId: number;\n};\ntype event = {\n  color: string | null,\n  date: string,\n  id: string,\n  name: string,\n  weekNumber: number\n}\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\nconst CalendarComponent = (props: CalenderComponentProps) => {\n  let Get_User = gql`\n  query getUser($id :ID!){\n    getUser(id:$id){\n      id\n      name\n      events {\n        id\n        name\n        date\n        weekNumber\n        color\n      }\n      eras{\n        id\n        name\n        startWeek\n        endWeek\n        color\n      }\n    }\n  }\n  `;\n  const { data, loading, error } = useQuery(Get_User, {\n    variables: { id: props.userId },\n  });\n  if(props.userId === 0){\n    return <p>Please enter your name email and birthdate before you try to make a calendar</p>\n  }\n  if (loading) {\n    return <p>Loading your Calender</p>;\n  }\n  if (error) {\n    return <p>SOMETHING WENT WRONG</p>;\n  }\n  if(data){\n    console.log(data)\n  }\n  // useMemo() for the fills\n  let calendar = new Array(76);\n  calendar.fill({});\n  let display = calendar.map((year, index) => {\n    let weeks = new Array(52);\n    weeks.fill(\"\");\n    let weeksDisplay = weeks.map((week, i) => {\n      let currentWeek = i + 1;\n      if (index > 0) {\n        currentWeek = i + 1 + index * 52;\n      }\n      let currentEvent = data.getUser.events.find((event:event) =>{\n        return event.weekNumber === currentWeek\n      })\n      let currentEra = data.getUser.eras.find((era:era )=>{\n        console.log(era.startWeek === currentWeek)\n        if(era.startWeek >= currentWeek && era.endWeek <=currentWeek){\n          console.log(era.startWeek)\n          console.log(era.endWeek)\n        }\n\n        if(era.startWeek >= currentWeek){\n          return true\n        }\n        if(currentWeek <= era.endWeek )\n        return false\n      })\n      if(currentEvent){\n        return <Week key={currentWeek} index={currentWeek} color = {currentEvent.color} name = {currentEvent.name} />;\n      }\n      if(currentEra){\n        return <Week key={currentWeek} index={currentWeek} color = {currentEra.color} name = {currentEra.name} />;\n      }\n      return <Week key={currentWeek} index={currentWeek} color = {'none'} name = {null} />;\n\n    });\n\n    return (\n      <section key={index}>\n        Age: {index}\n        {weeksDisplay}\n      </section>\n    );\n  });\n\n  return (\n    <section>\n      <NavBar />\n      Your calendar\n      {display}\n    </section>\n  );\n};\n// let shouldRerender = (prevProps,nextProps) =>{\n  // if()}\nexport default React.memo(CalendarComponent);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx",["77"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst HeaderComponent = () =>{\n  return (\n      <section>\n        {/* <img src = ''> logo*/}\n        <h1>Create My Calendar</h1>\n        <button >        \n          <Link to=\"/login\">Login</Link>\n        </button>\n        <button >        \n          <Link to=\"/calender\">Calendar</Link>\n        </button>\n      </section>\n  )\n}\nexport default HeaderComponent","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx",["78"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx",["79"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\ntype updateUserId = (id:number) => void\ntype FormStartPageProps = {\n  userId: number;\n  userName: string;\n  updateUserId :updateUserId\n};\nlet FormStartPage = (props: FormStartPageProps) => {\n  useEffect(() => {\n    props.updateUserId(props.userId)\n  }, [props.userId])\n  return (\n    <section>\n      <p>\n        As you know life is filled with choices. We've decided to give you\n        another. You can either start off editend your calendar from a blank\n        calendar or you can start off editing on a calendar with some events. If\n        you choose the prefilled calender\n      </p>\n      <Link to=\"/calender\">\n        <button>Start Calender</button>\n      </Link>\n      <Link to=\"/form\">\n        <button>Start Form</button>\n      </Link>\n    </section>\n  );\n};\nexport default React.memo(FormStartPage);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx",["80","81"],"import React, { useEffect, useState } from 'react';\nimport './Week.css';\n\ntype WeekProps = {\n  key: number;\n  index: number;\n  color: string | null;\n  name: string | null;\n};\n\nconst Week = (props: WeekProps) => {\n  let color:string | null;\n  if(props.color === null){\n    color = 'purple'\n  }\n  if(props.color === 'none'){\n    color = 'red'\n  }\n  else{\n    color = props.color\n  }\n  let handleClick = () => {\n    console.log('you clicked', props.name)\n    console.log(color)\n  };\n    // @ts-ignore \n  return <section style = {{backgroundColor:color}} className='week' onClick={handleClick}></section>;\n};\n\nexport default Week;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NavBar/NavBar.tsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":29},{"ruleId":"86","severity":1,"message":"90","line":1,"column":31,"nodeType":"88","messageId":"89","endLine":1,"endColumn":40},{"ruleId":"86","severity":1,"message":"91","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":13,"column":11,"nodeType":"88","messageId":"94","endLine":13,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"95","line":19,"column":7,"nodeType":"88","messageId":"89","endLine":19,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"96","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":76,"column":57,"nodeType":"99","messageId":"100","endLine":76,"endColumn":59},{"ruleId":"86","severity":1,"message":"96","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"101","line":61,"column":26,"nodeType":"88","messageId":"89","endLine":61,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":12,"column":6,"nodeType":"104","endLine":12,"endColumn":20,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"90","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"96","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'ReactElement' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'queryHelpers' is defined but never used.","@typescript-eslint/no-redeclare","'Question' is already defined.","redeclared","'onError' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [props, props.userId]",{"range":"111","text":"112"},[336,350],"[props, props.userId]"]