[{"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx":"1","/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts":"2","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx":"3","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx":"4","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx":"5","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx":"6","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx":"7","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx":"8","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx":"9","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx":"10","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx":"11","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx":"12","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx":"13","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx":"14","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx":"15"},{"size":854,"mtime":1610318179902,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1608243605463,"results":"18","hashOfConfig":"17"},{"size":1108,"mtime":1610490543607,"results":"19","hashOfConfig":"17"},{"size":2058,"mtime":1610490543586,"results":"20","hashOfConfig":"17"},{"size":798,"mtime":1609983807041,"results":"21","hashOfConfig":"17"},{"size":2573,"mtime":1610563221427,"results":"22","hashOfConfig":"17"},{"size":635,"mtime":1610490543588,"results":"23","hashOfConfig":"17"},{"size":3788,"mtime":1610515219151,"results":"24","hashOfConfig":"17"},{"size":534,"mtime":1610490543600,"results":"25","hashOfConfig":"17"},{"size":1184,"mtime":1610490543605,"results":"26","hashOfConfig":"17"},{"size":1093,"mtime":1610498229183,"results":"27","hashOfConfig":"17"},{"size":3582,"mtime":1610563449760,"results":"28","hashOfConfig":"17"},{"size":3077,"mtime":1610563021127,"results":"29","hashOfConfig":"17"},{"size":682,"mtime":1610561959180,"results":"30","hashOfConfig":"17"},{"size":1274,"mtime":1610562642331,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"c5br1r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx",[],["71","72"],"/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx",["73"],"import React, { useEffect, useState } from 'react';\nimport { FormContainer } from \"../FormContainer/FormContainer\";\nimport { Route } from \"react-router-dom\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport CalendarComponent from \"../CalendarComponent/CalendarComponent\";\nimport RequiredForm from \"../RequiredForm/RequiredForm\";\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport './App.css';\n\n\nexport const App = () => {\n  let [userId, updateUserId] = useState(0);\n  return (\n    <section className='bg'>\n      <Route exact path=\"/\">\n        <HeaderComponent />\n        <RequiredForm updateUserId={updateUserId}/>\n      </Route>\n      <Route\n        path=\"/login\"\n        render={() => {\n          return <LoginPage />;\n        }}\n      ></Route>\n      <Route\n        path=\"/form\"\n        render={() => {\n          return <FormContainer userId={userId}/>;\n        }}\n      ></Route>\n      <Route\n        path=\"/calendar\"\n        render={() => {\n          <HeaderComponent />\n          return <CalendarComponent userId={userId}/>;\n        }}\n      ></Route>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx",["74","75","76","77"],"import React, { ReactElement, useEffect, useState } from 'react';\nimport { Question } from '../Question/Question';\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport { gql, useQuery } from '@apollo/client';\nimport { queryHelpers } from '@testing-library/react';\nimport CalendarComponent from '../CalendarComponent/CalendarComponent';\nimport './FormContainer.css';\n\n\ntype FormContaineProps = {\n  userId: number;\n};\n\ninterface Question {\n  question: string;\n  name: string;\n  id: number;\n  __typename: string;\n}\n\nexport const getQuestionsQuery = gql`\n  {\n    getOnboardingQuestions {\n      id\n      question\n      name\n      eventType\n    }\n  }\n`;\n\nexport const FormContainer = (props: FormContaineProps) => {\n  let id = props.userId\n  if(props.userId ===0 && sessionStorage.length !==0){\n  //@ts-ignore\n  id =JSON.parse(sessionStorage.getItem('userId'))\n}\n  const [answers, setAnswer] = useState<string[]>([]);\n  const [currentQuestionIndex, changeQuestion] = useState(0);\n\n  const { loading, error, data } = useQuery(getQuestionsQuery);\n  if (error) {\n    return <h1>Error loading questions...</h1>;\n  }\n  if (loading || !data) {\n    return <h1>Loading...</h1>;\n  }\n\n  let questions = data.getOnboardingQuestions;\n\n  if(answers.length === questions.length) {\n    return <CalendarComponent userId = {id}/>\n    }\n\n  return (\n    <section>\n      <HeaderComponent />\n      <div className='form-container'>\n      <form>\n        <Question\n          questionType={questions[currentQuestionIndex].eventType}\n          currentQuestion={questions[currentQuestionIndex].question}\n          changeQuestion={changeQuestion}\n          currentQuestionIndex={currentQuestionIndex}\n          setAnswer={setAnswer}\n          answers={answers}\n          userId={id}\n        />\n      </form>\n      </div>\n      <div>\n      {questions.length && (\n        <ProgressBar\n          questionsLength={questions.length}\n          answersLength={answers.length}\n        />)}\n      </div>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx",["78"],"import React, { useEffect, useState } from 'react';\n const LoginPage = () =>{\n  let [userName,typeName] = useState('')\n\n  let [password,typePass] = useState('')\nlet createUserName = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typeName(event?.target.value)\n}\nlet createPass = (event: React.ChangeEvent<HTMLInputElement>) =>{\n  typePass(event?.target.value)\n}\n//are frontend validating this before we send it\n  return (\n    <section>\n    <form>\n\n      <input value = {userName} type = 'text' name = 'userName' placeholder=\"Username\" onChange = {createUserName}\n      ></input>\n      <input value = {password} type = 'password' name = 'password' placeholder=\"Password\" onChange = {createPass}\n      ></input>\n    </form>\n    <button>Submit</button>\n    </section>\n  )\n}\nexport default LoginPage","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx",["79"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx",["80","81","82"],"import React, { useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './HeaderComponent.css';\n\n\nconst HeaderComponent = () =>{\n  return (\n      <header className='header'>\n        {/* <img src = ''> logo*/}\n\n        <div>\n        <h1 className='logo-area'>ERAS</h1>\n        </div>\n        <div className='active-buttons'>\n          {/*<NavLink className='login-button header-link header-text' to=\"/login\">Login</NavLink> */}\n          {/* <NavLink className='calender-button header-link header-text' to=\"/calender\">Calendar</NavLink> */}\n        </div>\n      </header>\n  )\n}\nexport default HeaderComponent\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx",["83","84","85","86","87","88","89"],"import React, { useEffect, useState } from 'react';\nimport Week from '../Week/Week';\nimport NavBar from '../NavBar/NavBar';\nimport Event from '../Event/Event'\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport './CalendarComponent.css';\nimport AdditionalQuestions from '../AdditionalQuestions/AdditionalQuestions'\nimport { gql, useQuery } from '@apollo/client';\n\n\ntype CalenderComponentProps = {\n  userId: number;\n};\ntype event = {\n  color: string | null;\n  date: string;\n  id: string;\n  name: string;\n  weekNumber: number;\n};\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\nexport const Get_User = gql`\n  query getUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      name\n      events {\n        id\n        name\n        date\n        weekNumber\n        color\n      }\n      eras {\n        id\n        name\n        startWeek\n        endWeek\n        color\n      }\n    }\n  }\n`;\n\nconst CalendarComponent = (props: CalenderComponentProps) => {\n  let [newEras, addEra] = useState <era[]>([]) \n\n  let id = props.userId\n  if(props.userId ===0 || props.userId ===null && sessionStorage.getItem('userId') !== undefined ){\n    //@ts-ignore\n    id =JSON.parse(sessionStorage.getItem('userId'))\n  }\n  const { data, loading, error } = useQuery(Get_User, {\n    variables: { id: id }\n  });\n  if(error && !id ){\n    return <p>Please make a user before trying to make a calendar</p>\n  }\n  if (loading) {\n    return <p>Loading your Calender</p>;\n  }\n  if (error) {\n    return <p>Something went wrong</p>;\n  }\n  \n\n  let calendar = new Array(76);\n  calendar.fill({});\n  let display = calendar.map((year, index) => {\n    let weeks = new Array(52);\n    weeks.fill('');\n    let weeksDisplay = weeks.map((week, i) => {\n      let currentWeek = i + 1;\n      if (index > 0) {\n        currentWeek = i + 1 + index * 52;\n      }\n      let currentEvent = data.getUser.events.find((event: event) => {\n        return event.weekNumber === currentWeek;\n      });\n      let currentNewEra = newEras.find((era: era) =>{\n        if (currentWeek > era.endWeek) return false;\n\n        if (era.startWeek <= currentWeek) {\n          return true;\n        }\n      })\n      let currentEra = data.getUser.eras.find((era: era) => {\n        if (currentWeek > era.endWeek) return false;\n\n        if (era.startWeek <= currentWeek) {\n          return true;\n        }\n      });\n      if (currentEvent) {\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentEvent.color}\n            name={currentEvent.name}\n          />\n        );\n      }\n      if (currentEra) {\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentEra.color}\n            name={currentEra.name}\n          />\n        );\n      }\n      if(currentNewEra){\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentNewEra.color}\n            name={currentNewEra.name}\n          />\n        );\n      }\n      return (\n        <Week\n          key={currentWeek}\n          index={currentWeek}\n          color={'none'}\n          name={null}\n        />\n      );\n    });\n\n    return (\n      <section className='weeks-display' key={index}>\n        Age: {index}\n        {weeksDisplay}\n      </section>\n    );\n  });\n\n  return (\n    <section>\n      <HeaderComponent />\n      <h1 className='calendar-title'>Your Calendar</h1>\n        <Event userId = {props.userId} newEras = {newEras} addEra = {addEra} />\n      <p className='week-title'>Weeks</p>\n      <div className='calendar-area'>\n      Your calendar\n      {display}\n      </div>\n    </section>\n  );\n};\n\n\nexport default CalendarComponent;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx",["90"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './FormStartPage.css';\n\ntype updateUserId = (id:number) => void\ntype FormStartPageProps = {\n  userId: number;\n  userName: string;\n  updateUserId :updateUserId\n};\nlet FormStartPage = (props: FormStartPageProps) => {\n  useEffect(() => {\n    sessionStorage.setItem(\"userId\",JSON.stringify(props.userId))\n    props.updateUserId(props.userId)\n  }, [props.userId])\n  return (\n    <section>\n      <p className='life-choice-statement'>\n        As you know life is filled with choices. We've decided to give you\n        another. You can either start off editend your calendar from a blank\n        calendar or you can start off editing on a calendar with some events. If\n        you choose the prefilled calender\n      </p>\n      <Link to=\"/calendar\" style={{ textDecoration: 'none'}}>\n        <button>Start Calendar</button>\n      </Link>\n      <Link to=\"/form\" style={{ textDecoration: 'none'}}>\n        <button>Start Form</button>\n      </Link>\n    </section>\n  );\n};\nexport default React.memo(FormStartPage);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx",["91"],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx",["92","93","94","95","96","97"],"import React, { useState, useEffect} from 'react'\nimport EventForm from '../EventForm/EventForm'\nimport { DocumentNode, gql, useMutation } from \"@apollo/client\";\nimport { render } from 'react-dom';\ntype addEra = (era:any) => void\n\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\ntype eventProps = {\n  userId: number\n  newEras: era[],\n  addEra: addEra\n}\nconst Event = (props: eventProps) => {\n  let id = props.userId\n  if(props.userId ===0 || props.userId ===null && sessionStorage.getItem('userId') !== undefined ){\n    //@ts-ignore\n    id =JSON.parse(sessionStorage.getItem('userId'))\n  }\n    let CREATE_ERA = gql`\n    mutation createEra($userId :ID!, $name:String!, $startDate:String!, $endDate:String!, $color:String!){\n    createEra(input :{\n      userId: $userId,\n      name: $name,\n      startDate:$startDate,\n      endDate:$endDate,\n      color:$color,\n    }){\n      userId\n      name\n      startWeek\n      endWeek\n      color\n      }\n  }`\n  const [makeMutation, { data,loading,error }] = useMutation(CREATE_ERA);\n\n  const [lifeEvent, setLifeEvent] = useState('')\n  const [startEvent, setStartEvent] = useState('')\n  const [endEvent, setEndEvent] = useState('')\n  const [display, changeDisplay] = useState(false)\n\n  const handleLifeEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent(event.target.value)\n  }\n\n  const handleStartEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setStartEvent(event.target.value)\n  }\n\n  const handleEndEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setEndEvent(event.target.value)\n  }\n\n  const handleClearEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent('')\n  }\n\n  const handleButtonClick = () => {\n    changeDisplay(true)\n  }\n  const handleSubmit=async () =>{\n    if(lifeEvent === '' || startEvent ===''|| endEvent ==='' ){\n      return\n    }\n    let color = Math.floor(Math.random()*16777215).toString(16);\n     color = \"#\"+ color\n    let response = await makeMutation({\n      variables: {\n        userId: id,\n        name: lifeEvent,\n        startDate: startEvent.split(\"-\").reverse().join(\"-\"),\n        endDate: endEvent.split(\"-\").reverse().join(\"-\"),\n        color:color\n      },\n    }).catch(error =>{\n      return error\n    });\n    if(response){\n      props.addEra([...props.newEras,response.data.createEra])\n      setLifeEvent('')\n      setEndEvent('')\n      setStartEvent('')\n      changeDisplay(false)\n    }\n\n  }\n  if(loading){\n    return <p>We are trying your event</p>\n  }\n  if(error){\n    return <p>Something went wrong</p>\n  }\n   \n\n  return (\n    <section>\n    <button onClick={handleButtonClick}>Add an Era</button>\n      {display && <EventForm\n        handleLifeEvent={handleLifeEvent}\n        handleStartEvent={handleStartEvent}\n        handleEndEvent={handleEndEvent}\n        handleClearEvent={handleClearEvent}\n        changeDisplay={changeDisplay}\n        handleSubmit = {handleSubmit}\n        />\n      }\n    </section>\n  )\n}\n\n\n\nexport default React.memo(Event);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx",["98","99"],"import React, { useEffect, useState } from 'react';\nimport './Week.css';\n\ntype WeekProps = {\n  key: number;\n  index: number;\n  color: string | null;\n  name: string | null;\n};\n\nconst Week = (props: WeekProps) => {\n  let color:string | null;\n  if(props.color === null){\n    color = ''\n  }\n  if(props.color === 'none'){\n    color = 'red'\n  }\n  else{\n    color = props.color\n  }\n  let handleClick = () => {\n  };\n    // @ts-ignore\n  return <section style = {{backgroundColor:color}} className='week' onClick={handleClick}></section>;\n};\nfunction areEqual(prevProps:WeekProps, nextProps: WeekProps) {\n  return prevProps.name === nextProps.name\n}\nexport default React.memo(Week,areEqual);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":1,"column":31,"nodeType":"106","messageId":"107","endLine":1,"endColumn":40},{"ruleId":"104","severity":1,"message":"109","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":15,"column":11,"nodeType":"106","messageId":"112","endLine":15,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"113","line":4,"column":27,"nodeType":"106","messageId":"107","endLine":4,"endColumn":38},{"ruleId":"104","severity":1,"message":"114","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"115","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"116","line":2,"column":16,"nodeType":"106","messageId":"107","endLine":2,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"117","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"118","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":56,"column":24,"nodeType":"121","messageId":"122","endLine":56,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":56,"column":48,"nodeType":"121","messageId":"122","endLine":56,"endColumn":50},{"ruleId":"123","severity":1,"message":"124","line":87,"column":51,"nodeType":"125","messageId":"126","endLine":87,"endColumn":53},{"ruleId":"123","severity":1,"message":"124","line":94,"column":58,"nodeType":"125","messageId":"126","endLine":94,"endColumn":60},{"ruleId":"127","severity":1,"message":"128","line":15,"column":6,"nodeType":"129","endLine":15,"endColumn":20,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"131","line":61,"column":26,"nodeType":"106","messageId":"107","endLine":61,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"132","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":22},{"ruleId":"104","severity":1,"message":"133","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":22,"column":24,"nodeType":"121","messageId":"122","endLine":22,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":22,"column":48,"nodeType":"121","messageId":"122","endLine":22,"endColumn":50},{"ruleId":"104","severity":1,"message":"131","line":42,"column":26,"nodeType":"106","messageId":"107","endLine":42,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactElement' is defined but never used.","'queryHelpers' is defined but never used.","@typescript-eslint/no-redeclare","'Question' is already defined.","redeclared","'ApolloError' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'NavBar' is defined but never used.","'AdditionalQuestions' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["136"],"'data' is assigned a value but never used.","'DocumentNode' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [props, props.userId]",{"range":"139","text":"140"},[433,447],"[props, props.userId]"]