[{"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx":"1","/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts":"2","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx":"3","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx":"4","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx":"5","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx":"6","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx":"7","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NotFound/NotFound.tsx":"8","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx":"9","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx":"10","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx":"11","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx":"12","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx":"13","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx":"14","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx":"15","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx":"16"},{"size":854,"mtime":1610318179902,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608243605463,"results":"19","hashOfConfig":"18"},{"size":1254,"mtime":1610656867269,"results":"20","hashOfConfig":"18"},{"size":685,"mtime":1610656867276,"results":"21","hashOfConfig":"18"},{"size":2628,"mtime":1610663814979,"results":"22","hashOfConfig":"18"},{"size":822,"mtime":1610656867277,"results":"23","hashOfConfig":"18"},{"size":4033,"mtime":1610660732589,"results":"24","hashOfConfig":"18"},{"size":183,"mtime":1610656867279,"results":"25","hashOfConfig":"18"},{"size":2186,"mtime":1610656867273,"results":"26","hashOfConfig":"18"},{"size":667,"mtime":1610656867283,"results":"27","hashOfConfig":"18"},{"size":1144,"mtime":1610656867275,"results":"28","hashOfConfig":"18"},{"size":3837,"mtime":1610656867280,"results":"29","hashOfConfig":"18"},{"size":534,"mtime":1610490543600,"results":"30","hashOfConfig":"18"},{"size":3293,"mtime":1610661926938,"results":"31","hashOfConfig":"18"},{"size":1271,"mtime":1610664197649,"results":"32","hashOfConfig":"18"},{"size":1339,"mtime":1610656867272,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"c5br1r",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/taylor/turing/4module/capstone/eras-fe/src/index.tsx",[],["71","72"],"/Users/taylor/turing/4module/capstone/eras-fe/src/reportWebVitals.ts",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/App/App.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/HeaderComponent/HeaderComponent.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/RequiredForm/RequiredForm.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/LoginPage/LoginPage.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/CalendarComponent/CalendarComponent.tsx",["73","74","75","76","77","78"],"import React, { useEffect, useState } from 'react';\nimport Week from '../Week/Week';\nimport Event from '../Event/Event'\nimport HeaderComponent from '../HeaderComponent/HeaderComponent'\nimport './CalendarComponent.css';\nimport AdditionalQuestions from '../AdditionalQuestions/AdditionalQuestions'\nimport { gql, useQuery } from '@apollo/client';\n\n\ntype CalenderComponentProps = {\n  userId: number;\n};\ntype event = {\n  color: string | null;\n  date: string;\n  id: string;\n  name: string;\n  weekNumber: number;\n};\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\nexport const Get_User = gql`\n  query getUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      name\n      currentWeek\n      events {\n        id\n        name\n        date\n        weekNumber\n        color\n      }\n      eras {\n        id\n        name\n        startWeek\n        endWeek\n        color\n      }\n    }\n  }\n`;\n\nconst CalendarComponent = (props: CalenderComponentProps) => {\n\n  let [newEras, addEra] = useState <era[]>([])\n\n  let id = props.userId\n  if(props.userId ===0 || props.userId ===null && sessionStorage.getItem('userId') !== undefined ){\n    //@ts-ignore\n    id =JSON.parse(sessionStorage.getItem('userId'))\n  }\n\n  const { data, loading, error } = useQuery(Get_User, {\n    variables: { id: id }\n  });\n  if(error && !id ){\n    return <p>Please make a user before trying to make a calendar</p>\n  }\n  if (loading) {\n    return <p>Loading your Calender</p>;\n  }\n  if (error) {\n    return <p>Something went wrong</p>;\n  }\n\n\n  let calendar = new Array(90);\n  calendar.fill({});\n  let display = calendar.map((year, index) => {\n    let weeks = new Array(52);\n    weeks.fill('');\n    let weeksDisplay = weeks.map((week, i) => {\n      let currentWeek = i + 1;\n      if (index > 0) {\n        currentWeek = i + 1 + index * 52;\n      }\n      let currentEvent = data.getUser.events.find((event: event) => {\n        return event.weekNumber === currentWeek;\n      });\n      let currentNewEra = newEras.find((era: era) =>{\n        if (currentWeek > era.endWeek) return false;\n\n        if (era.startWeek <= currentWeek) {\n          return true;\n        }\n      })\n      let currentEra = data.getUser.eras.find((era: era) => {\n        if (currentWeek > era.endWeek) return false;\n\n        if (era.startWeek <= currentWeek) {\n          return true;\n        }\n      });\n      if(currentNewEra){\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentNewEra.color}\n            name={currentNewEra.name}\n          />\n        );\n      }\n      if (currentEvent) {\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentEvent.color}\n            name={currentEvent.name}\n          />\n        );\n      }\n      \n      if (currentEra) {\n        return (\n          <Week\n            key={currentWeek}\n            index={currentWeek}\n            color={currentEra.color}\n            name={currentEra.name}\n          />\n        );\n      }\n      if(data.getUser.currentWeek <= currentWeek){\n       return( <Week\n          key={currentWeek}\n          index={currentWeek}\n          color={'white'}\n          name={null}\n        />\n      )\n     }\n\n      return (\n        <Week\n          key={currentWeek}\n          index={currentWeek}\n          color={'none'}\n          name={null}\n        />\n      );\n    });\n\n    if (index < 10 ) {\n      //@ts-ignore\n      index = '0' + index\n    }\n\n    return (\n      <section className='weeks-display' key={index}>\n        Age: {index}\n        {weeksDisplay}\n      </section>\n    );\n  });\n\n  return (\n    <section>\n      <HeaderComponent />\n      <h1 className='calendar-title'>Your Calendar</h1>\n        <Event userId = {props.userId} newEras = {newEras} addEra = {addEra} />\n      <p className='week-title'>Weeks</p>\n      <div className='calendar-area'>\n      {display}\n      </div>\n    </section>\n  );\n};\n\n\nexport default CalendarComponent;\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/NotFound/NotFound.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormContainer/FormContainer.tsx",["79","80","81","82","83"],"import React, { ReactElement, useEffect, useState } from 'react';\nimport { Redirect} from \"react-router-dom\";\nimport { Question } from '../Question/Question';\nimport HeaderComponent from '../HeaderComponent/HeaderComponent';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport { gql, useQuery } from '@apollo/client';\nimport { queryHelpers } from '@testing-library/react';\nimport CalendarComponent from '../CalendarComponent/CalendarComponent';\nimport './FormContainer.css';\n\n\ntype FormContaineProps = {\n  userId: number;\n};\n\ninterface Question {\n  question: string;\n  name: string;\n  id: number;\n  __typename: string;\n}\n\nexport const getQuestionsQuery = gql`\n  {\n    getOnboardingQuestions {\n      id\n      question\n      name\n      eventType\n    }\n  }\n`;\n\nexport const FormContainer = (props: FormContaineProps) => {\n  let id = props.userId\n  if(props.userId ===0 && sessionStorage.length !==0){\n  //@ts-ignore\n  id =JSON.parse(sessionStorage.getItem('userId'))\n}\n  const [answers, setAnswer] = useState<string[]>([]);\n  const [currentQuestionIndex, changeQuestion] = useState(0);\n\n  const { loading, error, data } = useQuery(getQuestionsQuery);\n  if (error) {\n    return <h1>Error loading questions...</h1>;\n  }\n  if (loading || !data) {\n    return <h1>Loading...</h1>;\n  }\n\n  let questions = data.getOnboardingQuestions;\n\n  if(answers.length === questions.length) {\n   return <Redirect\n            to={{\n            pathname: \"/calendar\",\n            state: { userId: id}\n          }}\n        />\n    }\n\n  return (\n    <section>\n      <HeaderComponent />\n      <div className='form-container'>\n      <form>\n        <Question\n          questionType={questions[currentQuestionIndex].eventType}\n          currentQuestion={questions[currentQuestionIndex].question}\n          changeQuestion={changeQuestion}\n          currentQuestionIndex={currentQuestionIndex}\n          setAnswer={setAnswer}\n          answers={answers}\n          userId={id}\n        />\n      </form>\n      </div>\n      <div>\n      {questions.length && (\n        <ProgressBar\n          questionsLength={questions.length}\n          answersLength={answers.length}\n        />)}\n      </div>\n    </section>\n  );\n};\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Week/Week.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/FormStartPage/FormStartPage.tsx",["84"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './FormStartPage.css';\n\ntype updateUserId = (id:number) => void\ntype FormStartPageProps = {\n  userId: number;\n  userName: string;\n  updateUserId :updateUserId\n};\nlet FormStartPage = (props: FormStartPageProps) => {\n  useEffect(() => {\n    sessionStorage.setItem(\"userId\",JSON.stringify(props.userId))\n    props.updateUserId(props.userId)\n  }, [props.userId])\n  return (\n    <section>\n      <p className='life-choice-statement'>\n        As you know life is filled with choices. We've decided to give you\n        another. You can start off editing a blank calendar by selecting \n        'Start Calendar' or you can select 'Start Form' to answer a few \n        questions that will create events for you. You can add more events\n        later if you choose!\n      </p>\n      <Link to=\"/calendar\" style={{ textDecoration: 'none'}}>\n        <button>Start Calendar</button>\n      </Link>\n      <Link to=\"/form\" style={{ textDecoration: 'none'}}>\n        <button>Start Form</button>\n      </Link>\n    </section>\n  );\n};\nexport default React.memo(FormStartPage);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Question/Question.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/ProgressBar/ProgressBar.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/Event/Event.tsx",["85","86","87"],"import React, { useState} from 'react'\nimport EventForm from '../EventForm/EventForm'\nimport {gql, useMutation } from \"@apollo/client\";\ntype addEra = (era:any) => void\n\ntype era = {\n  color: string | null,\n  startWeek: number,\n  endWeek: number,\n  id: string,\n  name: string,\n  weekNumber: number\n}\ntype eventProps = {\n  userId: number\n  newEras: era[],\n  addEra: addEra\n}\nconst Event = (props: eventProps) => {\n  let id = props.userId\n  if(props.userId ===0 || props.userId ===null && sessionStorage.getItem('userId') !== undefined ){\n    //@ts-ignore\n    id =JSON.parse(sessionStorage.getItem('userId'))\n  }\n    let CREATE_ERA = gql`\n    mutation createEra($userId :ID!, $name:String!, $startDate:String!, $endDate:String! $color:String!){\n    createEra(input :{\n      userId: $userId,\n      name: $name,\n      startDate:$startDate,\n      endDate:$endDate,\n      color: $color\n    }){\n      userId\n      name\n      startWeek\n      endWeek\n      color\n      }\n  }`\n  const [makeMutation, { data,loading,error }] = useMutation(CREATE_ERA);\n\n  const [lifeEvent, setLifeEvent] = useState('')\n  const [startEvent, setStartEvent] = useState('')\n  const [endEvent, setEndEvent] = useState('')\n  const [display, changeDisplay] = useState(false)\n\n  const handleLifeEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent(event.target.value)\n  }\n\n  const handleStartEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setStartEvent(event.target.value)\n  }\n\n  const handleEndEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setEndEvent(event.target.value)\n  }\n\n  const handleClearEvent = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setLifeEvent('')\n  }\n\n  const handleButtonClick = () => {\n    changeDisplay(true)\n  }\n  let inputError = '' \n  const handleSubmit=async () =>{\n    if(Date.now() < new Date(startEvent).getTime() || Date.now() < new Date(endEvent).getTime() ){\n       inputError = 'Invalid Dates'\n       return\n    }\n    if(lifeEvent === '' || startEvent ===''|| endEvent ==='' ){\n      return\n    }\n    let color = Math.floor(Math.random()*16777215).toString(16);\n     color = \"#\"+ color\n    let response = await makeMutation({\n      variables: {\n        userId: id,\n        name: lifeEvent,\n        startDate: startEvent.split(\"-\").reverse().join(\"-\"),\n        endDate: endEvent.split(\"-\").reverse().join(\"-\"),\n        color:color\n      },\n    }).catch(error =>{\n      return error\n    });\n    if(loading){\n      return <p>We are trying your event</p>\n    }\n    if(error){\n      return <p>Something went wrong</p>\n    }\n     \n    if(response){\n      console.log(response.data.createEra)\n      props.addEra([...props.newEras,response.data.createEra])\n      setLifeEvent('')\n      setEndEvent('')\n      setStartEvent('')\n      changeDisplay(false)\n    }\n\n  }\n  \n\n  return (\n    <section>\n    <button onClick={handleButtonClick}>Add an Era</button>\n      {display && <EventForm\n        handleLifeEvent={handleLifeEvent}\n        handleStartEvent={handleStartEvent}\n        handleEndEvent={handleEndEvent}\n        handleClearEvent={handleClearEvent}\n        changeDisplay={changeDisplay}\n        handleSubmit = {handleSubmit}\n        />\n      }\n      {inputError && <p>Input error</p>}\n    </section>\n  )\n}\n\n\n\nexport default React.memo(Event);\n","/Users/taylor/turing/4module/capstone/eras-fe/src/Components/TextQuestion/TextQuestion.tsx",[],"/Users/taylor/turing/4module/capstone/eras-fe/src/Components/EventForm/EventForm.tsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":57,"column":24,"nodeType":"99","messageId":"100","endLine":57,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":57,"column":48,"nodeType":"99","messageId":"100","endLine":57,"endColumn":50},{"ruleId":"101","severity":1,"message":"102","line":89,"column":51,"nodeType":"103","messageId":"104","endLine":89,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":96,"column":58,"nodeType":"103","messageId":"104","endLine":96,"endColumn":60},{"ruleId":"92","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":1,"column":31,"nodeType":"94","messageId":"95","endLine":1,"endColumn":40},{"ruleId":"92","severity":1,"message":"106","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":22},{"ruleId":"92","severity":1,"message":"107","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":16,"column":11,"nodeType":"94","messageId":"110","endLine":16,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":15,"column":6,"nodeType":"113","endLine":15,"endColumn":20,"suggestions":"114"},{"ruleId":"97","severity":1,"message":"98","line":21,"column":24,"nodeType":"99","messageId":"100","endLine":21,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":21,"column":48,"nodeType":"99","messageId":"100","endLine":21,"endColumn":50},{"ruleId":"92","severity":1,"message":"115","line":41,"column":26,"nodeType":"94","messageId":"95","endLine":41,"endColumn":30},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'AdditionalQuestions' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ReactElement' is defined but never used.","'queryHelpers' is defined but never used.","'CalendarComponent' is defined but never used.","@typescript-eslint/no-redeclare","'Question' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["118"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [props, props.userId]",{"range":"121","text":"122"},[433,447],"[props, props.userId]"]